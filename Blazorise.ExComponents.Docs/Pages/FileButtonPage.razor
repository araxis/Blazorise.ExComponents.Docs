@page "/FileButtonPage"
<PageTitle>File Button</PageTitle>
<Container Fluid="true">
    <h1>File Button</h1>
    <p>file button control that supports single file and multiple files upload.</p>
    <h2>Examples</h2>
    <h3>Single file</h3>
    <Card>
        <CardBody>
            <FileButton Color="Color.Primary" Changed="OnChanged">Upload</FileButton>
            <PrettyCode CodeFile="pages/filebutton/basic.html" Theme="Material" />
        </CardBody>
    </Card>
    <br />
    <h3>Multiple files</h3>
    <Card>
        <CardBody>
            <FileButton Color="Color.Primary" Changed="OnChanged" Multiple>Upload</FileButton>
            <PrettyCode CodeFile="pages/filebutton/multiple.html" Theme="Material" />
        </CardBody>
    </Card>
    <br />
    <h3> Limiting to certain file types</h3>
    <Card>
        <CardBody>
            <FileButton Color="Color.Primary" Changed="OnChanged" Filter="image/jpeg, image/png, image/gif">Upload</FileButton>
            <PrettyCode CodeFile="pages/filebutton/filter.html" Theme="Material" />
        </CardBody>
    </Card>

    <br />
    <h3>Events</h3>

    <Card>
        <CardBody>
            <FileButton Color="Color.Primary"
                        Changed="OnChanged"
                        Progressed="OnProgressed"
                        Written="OnWritten"
                        Started="OnStarted"
                        Ended="OnEnded">
                Upload
            </FileButton>
            <PrettyCode CodeFile="pages/filebutton/events.html" Theme="Material" />
        </CardBody>
    </Card>

</Container>

@code {

    private Task OnChanged(FileChangedEventArgs e)
    {
        return Task.CompletedTask;
    }

    private Task OnProgressed(FileProgressedEventArgs e)
    {
        return Task.CompletedTask;
    }

    private Task OnWritten(FileWrittenEventArgs e)
    {
        return Task.CompletedTask;
    }

    private Task OnStarted(FileStartedEventArgs e)
    {
        return Task.CompletedTask;
    }

    private Task OnEnded(FileEndedEventArgs e)
    {
        return Task.CompletedTask;
    }

}