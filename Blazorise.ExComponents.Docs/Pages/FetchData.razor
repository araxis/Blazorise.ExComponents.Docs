@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>


@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <DataGrid TItem="WeatherForecast"
          Data="@forecasts"
          @bind-SelectedRow="@selected"
          Responsive>
        <DataGridCommandColumn />
        <DataGridColumn Field="@nameof(WeatherForecast.Date)" Caption="Date" Sortable="false" />
        <DataGridColumn Field="@nameof(WeatherForecast.TemperatureC)" Caption="Temp. (C)" Editable />
        <DataGridColumn Field="@nameof(WeatherForecast.TemperatureF)" Caption="Temp. (F)" Editable />
        <DataGridColumn Field="@nameof(WeatherForecast.Summary)" Caption="Summary" Editable />

    </DataGrid>

    @if (selected != null)
    {
        <p>@($"{selected.Date.ToLongDateString()}")</p>
        <p>@($"{selected.TemperatureC} ℃")</p>
        <p>@($"{selected.TemperatureF} ℉")</p>
    }
}

@code {
    private WeatherForecast[]? forecasts;

    private WeatherForecast selected;

     protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }


}